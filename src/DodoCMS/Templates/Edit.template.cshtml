@model Dodo.ViewModels.{TYPE}ViewModel;

@{
	// This is generated code from the DodoAOT project. DO NOT MODIFY.\r\n
	ViewData["Title"] = "Edit {NAME}";
	Dodo.AccessContext context = (Dodo.AccessContext)ViewData["Context"];
	Resources.EPermissionLevel permissionLevel = (Resources.EPermissionLevel)ViewData["Permission"];
	System.TimeZoneInfo Timezone = (System.TimeZoneInfo)ViewData["Timezone"];
	var notifications = (ViewData["notifications"] as IEnumerable<Dodo.Notification>);
	Dodo.AdministratorPermissionSet permissions = ViewData["permissions"] as Dodo.AdministratorPermissionSet;
	string tab = Context.Request.Query.TryGetValue("tab", out var tabVals) ? tabVals.First() : "info";
}

{SCRIPTS}

<ul class="nav nav-tabs" id="myTab" role="tablist">
	<li class="nav-item">
		<a class="nav-link active" id="info-tab" data-toggle="tab" href="#info" role="tab" aria-controls="info" aria-selected="@(tab == "info" ? "true" : "false")">Edit Details</a>
	</li>
	@if (typeof(Dodo.Users.Tokens.INotificationResource).IsAssignableFrom(Model.__Type))
	{
		<li class="nav-item">
			<a class="nav-link" id="notifications-tab" data-toggle="tab" href="#notifications" role="tab" aria-controls="notifications" aria-selected="@(tab == "notifications" ? "true" : "false")">Announcements</a>
		</li>
	}
	@if (typeof(Dodo.IAdministratedResource).IsAssignableFrom(Model.__Type))
	{
		<li class="nav-item">
			<a class="nav-link" id="admin-tab" data-toggle="tab" href="#admin" role="tab" aria-controls="admin" aria-selected="@(tab == "admin" ? "true" : "false")">Administration</a>
		</li>
	}
	@if (typeof(Dodo.Roles.Role).IsAssignableFrom(Model.__Type))
	{
		<li class="nav-item">
			<a class="nav-link" id="role-tab" data-toggle="tab" href="#role" role="tab" aria-controls="role" aria-selected="@(tab == "role" ? "true" : "false")">Applications</a>
		</li>
	}
	<li class="nav-item">
		<a class="nav-link" id="analytics-tab" data-toggle="tab" href="#analytics" role="tab" aria-controls="analytics" aria-selected="@(tab == "analytics" ? "true" : "false")">Analytics</a>
	</li>
	<li><a class="nav-link active" href="@Dodo.DodoApp.NetConfig.FullURI/{TYPE}/@Model.Slug" target="_blank"><span>View <i class="fa fa-link" aria-hidden="true"></i></span></a></li>
</ul>
<div class="tab-content" id="myTabContent">
	<div class="tab-pane fade show active" id="info" role="tabpanel" aria-labelledby="info-tab">
		<div class="card">
			<div class="card-body">
				@{ 
					if(typeof(Dodo.ITimeBoundResource).IsAssignableFrom(Model.__Type))
					{
						var tb = Model as dynamic;
						if (DateTime.UtcNow > tb.EndDate)
						{
							<div class="alert alert-warning published-message" role="alert">
								This event has now ended, so it won't show up in results.
							</div>
						}
					}
				}
				<form id="edit" asp-action="Edit">
					<div asp-validation-summary="ModelOnly" class="text-danger"></div>
					{DETAILS}
					<div class="form-field form-group">
						<input type="submit" value="Save" class="btn btn-primary btn-block" />
					</div>
				</form>
			</div>
		</div>
	</div>
	@{ if (typeof(Dodo.Users.Tokens.INotificationResource).IsAssignableFrom(Model.__Type))
		{
			<div class="tab-pane fade" id="notifications" role="tabpanel" aria-labelledby="notifications-tab">
				{NOTIFICATIONS}
			</div>
		} }
	@{if (typeof(Dodo.IAdministratedResource).IsAssignableFrom(Model.__Type))
		{
			<div class="tab-pane fade" id="admin" role="tabpanel" aria-labelledby="admin-tab">
				{ADMIN}
			</div>
		} }
	@{ if (typeof(Dodo.Roles.Role).IsAssignableFrom(Model.__Type))
		{
			<div class="tab-pane fade" id="role" role="tabpanel" aria-labelledby="role-tab">
				{ROLES}
			</div>
		}}
	<div class="tab-pane fade" id="analytics" role="tabpanel" aria-labelledby="analytics-tab">
		{ANALYTICS}
	</div>
</div>
