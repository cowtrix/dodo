@model Dodo.ViewModels.RoleViewModel;

@{
	// This is generated code from the DodoAOT project. DO NOT MODIFY.\r\n
	ViewData["Title"] = "Edit Role";
	Dodo.AccessContext context = (Dodo.AccessContext)ViewData["Context"];
	Resources.EPermissionLevel permissionLevel = (Resources.EPermissionLevel)ViewData["Permission"];
	System.TimeZoneInfo Timezone = (System.TimeZoneInfo)ViewData["Timezone"];
	var notifications = (ViewData["notifications"] as IEnumerable<Dodo.Notification>);
}

<script>
$(function () {
	$('[data-toggle="tooltip"]').tooltip()
})

</script>


<ul class="nav nav-tabs" id="myTab" role="tablist">
	<li class="nav-item">
		<a class="nav-link active" id="info-tab" data-toggle="tab" href="#info" role="tab" aria-controls="info" aria-selected="true">Edit Details</a>
	</li>
	@if (typeof(Dodo.Users.Tokens.INotificationResource).IsAssignableFrom(Model.__Type))
	{
		<li class="nav-item">
			<a class="nav-link" id="notifications-tab" data-toggle="tab" href="#notifications" role="tab" aria-controls="notifications" aria-selected="false">Notifications</a>
		</li>
	}
	@if (typeof(Dodo.IAdministratedResource).IsAssignableFrom(Model.__Type))
	{
		<li class="nav-item">
			<a class="nav-link" id="admin-tab" data-toggle="tab" href="#admin" role="tab" aria-controls="admin" aria-selected="false">Administration</a>
		</li>
	}
	<li><a class="nav-link active" href="@Dodo.DodoApp.NetConfig.FullURI/Role/@Model.Slug" target="_blank">View</a></li>
</ul>
<div class="tab-content" id="myTabContent">
	<div class="tab-pane fade show active" id="info" role="tabpanel" aria-labelledby="info-tab">
		<div class="card" style="width:100%;">
			<div class="card-body">
				<form asp-action="Edit">
					<div asp-validation-summary="ModelOnly" class="text-danger"></div>
									@{ var rscColor = @Dodo.APIController.TypeDisplayColors[Model.Parent.GetRefType()]; }
				<div class="navbar navbar-expand-lg navbar-dark" style="width=100%; background-color:#@rscColor; margin:-20px; margin-bottom:20px;">
				<a class="navbar-brand" href="https://localhost:5001/@Model.Parent.GetRefType().Name/@Model.Parent.Slug">Part of the @Model.Parent.Name</a>
				</div>
				<div class="form-check">
					<input type="checkbox" asp-for="IsPublished" class="form-check-input"></input>
					<label asp-for="IsPublished" class="form-check-label"></label>
					<span asp-validation-for="IsPublished" class="text-danger"></span>
					<small id="helpBlock" class="form-text text-muted">
						This indicates whether or not this is publicly viewable by all users.
					</small>
				</div>
				<div class="form-group">
					<label asp-for="Name" class="control-label"></label>
					<input  asp-for="Name" class="form-control"></input>
					<span asp-validation-for="Name" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="Slug" class="control-label"></label>
					<input  asp-for="Slug" class="form-control"></input>
					<span asp-validation-for="Slug" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="Guid" class="control-label"></label>
					<input  readonly asp-for="Guid" class="form-control"></input>
					<span asp-validation-for="Guid" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="Revision" class="control-label"></label>
					<input  readonly asp-for="Revision" class="form-control"></input>
					<span asp-validation-for="Revision" class="text-danger"></span>
				</div>

				<div class="form-group">
				<label asp-for="PublicDescription" class="control-label"></label>
				<textarea style="height:20em;" asp-for="PublicDescription" class="form-control"></textarea>
				</div>
				<div class="form-group">
				<label asp-for="ApplicantQuestion" class="control-label"></label>
				<textarea style="height:20em;" asp-for="ApplicantQuestion" class="form-control"></textarea>
				</div>

					<div class="form-group">
						<input type="submit" value="Save" class="btn btn-primary btn-block" />
					</div>
				</form>
			</div>
		</div>
	</div>
	@if (typeof(Dodo.Users.Tokens.INotificationResource).IsAssignableFrom(Model.__Type))
	{
		<div class="tab-pane fade" id="notifications" role="tabpanel" aria-labelledby="notifications-tab">
			<div class="card">
	<h5 class="card-header">Post an Announcement</h5>
	<div class="card-body" style="text-align:right;">
		<form id="newannouncement" method="post" action="notifications/@Model.Slug/new">
			<div class="form-group">
				<textarea id="Message" name="Message" class="form-control" style="height:10em;"></textarea>
			</div>
			<small id="helpBlock" class="form-text text-muted" style="text-align:left;">
				Announcements are messages that will be displayed on the public page and be visible for all users. You can use them to give short updates or messages.
			</small>
			<input type="submit" value="Post" class="btn btn-primary" style="width:100px;" />
		</form>
	</div>
</div>

<div class="card">
	<h5 class="card-header">Current Notifications</h5>
	<div class="card-body">
		<ul class="list-group">
			@{foreach (var notification in notifications)
				{
					<li class="list-group-item">
						<div class="card-header" style="margin-left:-20px; margin-right:-20px; margin-top:-12px;">
							<div class="row">
								<div class="col" style="margin-left:10px;">
									<div class="row">
										<small>
											@TimeZoneInfo.ConvertTimeFromUtc(notification.Timestamp.ToUniversalTime(), Timezone ?? TimeZoneInfo.Utc).ToString("HH:mm d/M/y")
										</small>
									</div>
									<div class="row">
										<strong>
											@notification.Type.ToUpperInvariant()
										</strong>
									</div>
								</div>
								<div class="col-auto">
									@{ if (!string.IsNullOrEmpty(notification.Source))
										{
											<button type="button" class="btn btn-outline-primary" data-toggle="tooltip" data-placement="bottom" title="Source: @notification.Source">
												<span class="fas fa-comment"></span>
											</button>
										} }
									@{ if (!string.IsNullOrEmpty(notification.Link))
										{
											<button type="button" class="btn btn-outline-primary" data-toggle="tooltip" data-placement="bottom" title="URL: @notification.Link">
												<span class="fas fa-link"></span>
											</button>
										} }
									<button type="button" class="btn btn-outline-primary" data-toggle="tooltip" data-placement="bottom" title="The visibility of this announcement is @Common.NameAttributeExtensions.GetName(notification.PermissionLevel)">
										<span class="fas fa-eye"></span>
									</button>
									@if (notification.CanDelete)
									{
										<a class="btn btn-outline-danger" href="notifications/@Model.Slug/delete?notification=@notification.Guid">
											<p class="fas fa-trash"></p>
										</a>
									}

								</div>
							</div>
						</div>
						<div style="padding:10px;">
							<p style="margin:0;"> @Html.Raw(notification.Message) </p>
						</div>
					</li>
				}}
		</ul>
	</div>
</div>

		</div>
	}
	@if (typeof(Dodo.IAdministratedResource).IsAssignableFrom(Model.__Type))
	{
		<div class="tab-pane fade" id="admin" role="tabpanel" aria-labelledby="admin-tab">
			
		</div>
	}
</div>
