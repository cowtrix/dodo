@model Dodo.ViewModels.RoleViewModel;

@{
	// This is generated code from the DodoAOT project. DO NOT MODIFY.\r\n
	ViewData["Title"] = "Edit Role";
	Dodo.AccessContext context = (Dodo.AccessContext)ViewData["Context"];
	Resources.EPermissionLevel permissionLevel = (Resources.EPermissionLevel)ViewData["Permission"];
	System.TimeZoneInfo Timezone = (System.TimeZoneInfo)ViewData["Timezone"];
	var notifications = (ViewData["notifications"] as IEnumerable<Dodo.Notification>);
}

<script>
$(function () {
	$('[data-toggle="tooltip"]').tooltip()
})

</script>


	<ul class="nav nav-tabs" id="myTab" role="tablist">
		<li class="nav-item">
			<a class="nav-link active" id="info-tab" data-toggle="tab" href="#info" role="tab" aria-controls="info" aria-selected="true">Edit Details</a>
		</li>
		@if (typeof(Dodo.Users.Tokens.INotificationResource).IsAssignableFrom(Model.__Type))
		{
			<li class="nav-item">
				<a class="nav-link" id="notifications-tab" data-toggle="tab" href="#notifications" role="tab" aria-controls="notifications" aria-selected="false">Notifications</a>
			</li>
		}
		@if (typeof(Dodo.IAdministratedResource).IsAssignableFrom(Model.__Type))
		{
			<li class="nav-item">
				<a class="nav-link" id="admin-tab" data-toggle="tab" href="#admin" role="tab" aria-controls="admin" aria-selected="false">Administration</a>
			</li>
		}
		@if (typeof(Dodo.Roles.Role).IsAssignableFrom(Model.__Type))
		{
			<li class="nav-item">
				<a class="nav-link" id="role-tab" data-toggle="tab" href="#role" role="tab" aria-controls="role" aria-selected="false">Applications</a>
			</li>
		}
		<li><a class="nav-link active" href="@Dodo.DodoApp.NetConfig.FullURI/Role/@Model.Slug" target="_blank">View <i class="fa fa-link" aria-hidden="true"></i></a></li>
	</ul>
	<div class="tab-content" id="myTabContent">
		<div class="tab-pane fade show active" id="info" role="tabpanel" aria-labelledby="info-tab">
			<div class="card" style="width:100%;">
				<div class="card-body">
					<form asp-action="Edit">
						<div asp-validation-summary="ModelOnly" class="text-danger"></div>
											<label class="control-label">Parent</label>
					<input class="sr-only" asp-for="Parent.Type"/>
					<div class="row">
					<div class="col"><strong>@Model.Parent.Name</strong></div>
					<div class="col-auto"><a class="btn btn-light" style="background-color:#@Dodo.APIController.GetDisplayColor(Model.Parent.GetRefType())" role="button" href="../../@Model.Parent.Type/@Model.Parent.Slug"><i class="fa fa-eye"></i></a></div>
					<div class="col-auto"><a class="btn btn-light" style="background-color:#@Dodo.APIController.GetDisplayColor(Model.Parent.GetRefType())" role="button" href="../../edit/@Model.Parent.Type/@Model.Parent.Slug"><i class="fa fa-edit"></i></a></div>
					</div>
<div class="form-check">
	<input type="checkbox" asp-for="IsPublished" class="form-check-input"></input>
	<label class="form-check-label">Published</label>
	<span asp-validation-for="IsPublished" class="text-danger"></span>
	<small id="helpBlock" class="form-text text-muted">
		This indicates whether or not this is publicly viewable by all users.
	</small>
	@{
		if (!Model.IsPublished)
		{
		<div class="alert alert-warning" role="alert">
			This is not yet published, so it won't show up in search results or be visible to non-administrators.
		</div>
		}
	}
</div>

				<div class="form-group">
					<label class="control-label">Name</label>
					<input  asp-for="Name" class="form-control"></input>
					<span asp-validation-for="Name" class="text-danger"></span>
				</div>
					<input asp-for="Slug" class="sr-only"></input>
					<input asp-for="Guid" class="sr-only"></input>
					<input asp-for="Revision" class="sr-only"></input>
				<div class="form-group">
				<label class="control-label">Public Description</label>
				<textarea style="height:20em;" asp-for="PublicDescription" class="form-control"></textarea>
					<small id="helpBlock" class="form-text text-muted">
						<script>$('form :input').change(function(){var v = 2048 - $("#PublicDescription").val().length;$('#descriptionLength').text(v + ' characters remaining. ')});</script><p id="descriptionLength"></p>To insert hyperlinks, use the following format: [My link text](www.example.com). This will display as: <a href="www.example.com">My link text</a>
					</small>
				</div>
				<div class="form-group">
				<label class="control-label">Applicant Question</label>
				<textarea style="height:20em;" asp-for="ApplicantQuestion" class="form-control"></textarea>
					<small id="helpBlock" class="form-text text-muted">
						Here you can describe required skills, training and availabilities. All applicants will answer this prompt when applying for this role.
					</small>
				</div>
				<div class="form-group">
					<label class="control-label">Applications</label>
					<input  asp-for="Applications" class="form-control"></input>
					<span asp-validation-for="Applications" class="text-danger"></span>
				</div>

						<div class="form-group">
							<input type="submit" value="Save" class="btn btn-primary btn-block" />
						</div>
					</form>
				</div>
			</div>
		</div>
		@if (typeof(Dodo.Users.Tokens.INotificationResource).IsAssignableFrom(Model.__Type))
		{
			<div class="tab-pane fade" id="notifications" role="tabpanel" aria-labelledby="notifications-tab">
				
			</div>
		}
		@if (typeof(Dodo.IAdministratedResource).IsAssignableFrom(Model.__Type))
		{
			<div class="tab-pane fade" id="admin" role="tabpanel" aria-labelledby="admin-tab">
				
			</div>
		}
		@if (typeof(Dodo.Roles.Role).IsAssignableFrom(Model.__Type))
		{
			<div class="tab-pane fade" id="role" role="tabpanel" aria-labelledby="role-tab">
				@{
	var applications = ViewData["applications"] as Dictionary<string, Dodo.Roles.RoleApplicationData>;
	//Dodo.AdministratorEntry thisAdmin = adminData.Administrators.Single(ad => ad.User.Guid == context.User.Guid);
	var authManager = (ViewData["auth"] as Dodo.AuthorizationService<Dodo.Roles.Role, Dodo.Roles.RoleSchema>);
	//var canView = thisAdmin.Permissions.HasPermission("CanViewApplications");
	//var canRemove = thisAdmin.Permissions.HasPermission("CanRemoveApplications");
}
<div class="card">
	<h5 class="card-header">Applications</h5>
	<div class="card-body">
		<div id="accordion">
			@{
				var counter = 0;
				foreach (KeyValuePair<string, Dodo.Roles.RoleApplicationData> kvp in applications)
				{
					Dodo.Roles.RoleApplicationData app = kvp.Value;
					<div class="card">
						<div class="card-header" id="heading@(counter)">
							<div class="row">
								<div class="col-auto">
									<button class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapse@(counter)" aria-expanded="false" aria-controls="collapse@(counter)">
										totle
									</button>
								</div>
								<div class="col" style="text-align:right;">
									<a class="btn btn-outline-danger" href="@Model.Slug/">
										<p class="fas fa-trash"></p>
									</a>
								</div>
							</div>
						</div>
						<!-- Conversation -->
						<div id="collapse@(counter)" class="collapse" aria-labelledby="heading@counter" data-parent="#accordion">
							<div class="card-body">
								<form id="@app.Applicant)" method="post" action="@Model.Slug/" enctype="application/x-www-form-urlencoded">
									<div class="card-body">
										<div class="row">
											
										</div>
									</div>
									<div class="card-body">
										<input type="submit" value="Save" class="btn btn-primary btn-block" />
									</div>
								</form>
							</div>
						</div>
					</div>
					counter++;
				}
			}
		</div>
	</div>
</div>
}

			</div>
		}
	</div>
