@model Dodo.ViewModels.EventViewModel;

@{
	// This is generated code from the DodoAOT project. DO NOT MODIFY.\r\n
	ViewData["Title"] = "Edit Event";
	Dodo.AccessContext context = (Dodo.AccessContext)ViewData["Context"];
	Resources.EPermissionLevel permissionLevel = (Resources.EPermissionLevel)ViewData["Permission"];
	System.TimeZoneInfo Timezone = (System.TimeZoneInfo)ViewData["Timezone"];
	var notifications = (ViewData["notifications"] as IEnumerable<Dodo.Notification>);
	Dodo.AdministratorPermissionSet permissions = ViewData["permissions"] as Dodo.AdministratorPermissionSet;
}

<script>
$(function () {
	$('[data-toggle="tooltip"]').tooltip()
})

</script>


<ul class="nav nav-tabs" id="myTab" role="tablist">
	<li class="nav-item">
		<a class="nav-link active" id="info-tab" data-toggle="tab" href="#info" role="tab" aria-controls="info" aria-selected="true">Edit Details</a>
	</li>
	@if (typeof(Dodo.Users.Tokens.INotificationResource).IsAssignableFrom(Model.__Type))
	{
		<li class="nav-item">
			<a class="nav-link" id="notifications-tab" data-toggle="tab" href="#notifications" role="tab" aria-controls="notifications" aria-selected="false">Notifications</a>
		</li>
	}
	@if (typeof(Dodo.IAdministratedResource).IsAssignableFrom(Model.__Type))
	{
		<li class="nav-item">
			<a class="nav-link" id="admin-tab" data-toggle="tab" href="#admin" role="tab" aria-controls="admin" aria-selected="false">Administration</a>
		</li>
	}
	@if (typeof(Dodo.Roles.Role).IsAssignableFrom(Model.__Type) && permissions != null && permissions.CanManageRoles)
	{
		<li class="nav-item">
			<a class="nav-link" id="role-tab" data-toggle="tab" href="#role" role="tab" aria-controls="role" aria-selected="false">Applications</a>
		</li>
	}
	<li class="nav-item">
		<a class="nav-link" id="analytics-tab" data-toggle="tab" href="#analytics" role="tab" aria-controls="role" aria-selected="false">Analytics</a>
	</li>
	<li><a class="nav-link active" href="@Dodo.DodoApp.NetConfig.FullURI/Event/@Model.Slug" target="_blank"><span>View <i class="fa fa-link" aria-hidden="true"></i></span></a></li>
</ul>
<div class="tab-content" id="myTabContent">
	<div class="tab-pane fade show active" id="info" role="tabpanel" aria-labelledby="info-tab">
		<div class="card">
			<div class="card-body">
				<form id="edit" asp-action="Edit">
					<div asp-validation-summary="ModelOnly" class="text-danger"></div>
										<label class="control-label">Parent</label>
					<button type ="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"Parent"))"><i class="fas fa-question-circle"></i></button>
					<input class="sr-only" asp-for="Parent.Type"/>
					@{ var reftype46067993 = @Model.Parent.Type.ToLowerInvariant(); }
					<div class="row">
					<div class="col"><strong>@Model.Parent.Name</strong></div>
					<div class="col-auto"><a class="btn btn-light @(reftype46067993)-reference" role="button" href="../../@Model.Parent.Type/@Model.Parent.Slug"><i class="fa fa-eye"></i>View</a></div>
					<div class="col-auto"><a class="btn btn-light @(reftype46067993)-reference" role="button" href="../../edit/@Model.Parent.Type/@Model.Parent.Slug"><i class="fa fa-edit"></i>Edit</a></div>
					</div>
@{
	if (!Model.IsPublished)
{
<div class="form-check">
	<input type="checkbox" asp-for="IsPublished" class="form-check-input"></input>
	<label class="form-check-label">Published</label>
	<span asp-validation-for="IsPublished" class="text-danger"></span>
	<small id="helpBlock" class="form-text text-muted">
		This indicates whether or not this is publicly viewable by all users. This is not yet published, so it won't show up in search results or be visible to non-administrators. Once a resource is published, it cannot be unpublished.
	</small>
</div>
}
else
{
	<input class="sr-only" type="checkbox" asp-for="IsPublished" class="form-check-input"></input>
	<div class="alert alert-warning published-message" role="alert">
		This resource is now published and publicly visible.
	</div>
}
}


				<div class="form-field form-group">
					<button type ="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"Name"))"><i class="fas fa-question-circle"></i></button>
					<label class="control-label">Name</label>
					<input  asp-for="Name" class="form-control"></input>
					<span asp-validation-for="Name" class="text-danger"></span>
				</div>
					<input asp-for="Slug" class="sr-only"></input>
					<input asp-for="Guid" class="sr-only"></input>
					<input asp-for="Revision" class="sr-only"></input>
					<input asp-for="PublicKey" class="sr-only"></input>
				<div class="form-field form-group">
				<button type ="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"PublicDescription"))"><i class="fas fa-question-circle"></i></button>
				<label class="control-label">Public Description</label>
				<textarea asp-for="PublicDescription" class="form-control description-entry"></textarea>
					<small id="helpBlock" class="form-text text-muted">
						<script>$('form :input').change(function(){var v = 2048 - $("#PublicDescription").val().length;$('#descriptionLength').text(v + ' characters remaining. ')});</script><p id="descriptionLength"></p>
					</small>
				</div>
					<input asp-for="MemberCount" class="sr-only"></input>
				<div class="form-field form-group">
					<button type ="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"ArrestRisk"))"><i class="fas fa-question-circle"></i></button>
					<label class="control-label">Arrest Risk</label>
					<select asp-items="@Html.GetEnumSelectList<Dodo.LocationResources.EArrestRisk>()" asp-for="ArrestRisk" class="form-control"></select>
					<span asp-validation-for="ArrestRisk" class="text-danger"></span>
				</div>
				<div class="form-field form-group">
					<button type ="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"VideoEmbedURL"))"><i class="fas fa-question-circle"></i></button>
					<label class="control-label">Video Embed URL</label>
					<input  asp-for="VideoEmbedURL" class="form-control"></input>
					<span asp-validation-for="VideoEmbedURL" class="text-danger"></span>
				</div>
<script>
	mapboxgl.accessToken = "@Common.Config.ConfigManager.GetValue("MapBoxGeocodingService_ApiKey", "")"
	var coordinates = document.getElementById('coordinates');
	window.onload = function () {
		var map = new mapboxgl.Map({
			container: 'map',
			style: 'mapbox://styles/mapbox/streets-v11',
			center: [@Model.Location.Longitude, @Model.Location.Latitude],
			zoom: 6
		});
		var geocoder = new MapboxGeocoder({
			accessToken: mapboxgl.accessToken,
			mapboxgl: mapboxgl
		});
		geocoder.on('result', function (result) {

			var coords = result["result"]["center"];
			console.warn(JSON.stringify(
				coords,
				null,
				2
			));
			document.getElementById("Model.Location_lat").value = coords[1];
			document.getElementById("Model.Location_lng").value = coords[0];
			// Update the Point feature in `geojson` coordinates
			// and call setData to the source layer `point` on it.
		geojson.features[0].geometry.coordinates = [coords[0], coords[1]];
			map.getSource('point').setData(geojson);
		});
		map.addControl(
			geocoder
		);
		var canvas = map.getCanvasContainer();

		var geojson = {
			'type': 'FeatureCollection',
			'features': [
				{
					'type': 'Feature',
					'geometry': {
						'type': 'Point',
						'coordinates': [@Model.Location.Longitude, @Model.Location.Latitude],
					}
				}
			]
		};

		function onMove(e) {
			var coords = e.lngLat;

			// Set a UI indicator for dragging.
			canvas.style.cursor = 'grabbing';

			// Update the Point feature in `geojson` coordinates
			// and call setData to the source layer `point` on it.
			geojson.features[0].geometry.coordinates = [coords.lng, coords.lat];
			map.getSource('point').setData(geojson);
		}

		function onUp(e) {
			var coords = e.lngLat;

			document.getElementById("Model.Location_lat").value = coords.lat;
			document.getElementById("Model.Location_lng").value = coords.lng;

			canvas.style.cursor = '';

			// Unbind mouse/touch events
			map.off('mousemove', onMove);
			map.off('touchmove', onMove);
		}

		map.on('load', function () {
			// Add a single point to the map
			map.addSource('point', {
				'type': 'geojson',
				'data': geojson
			});

			map.addLayer({
				'id': 'point',
				'type': 'circle',
				'source': 'point',
				'paint': {
					'circle-radius': 10,
					'circle-color': '#3887be'
				}
			});

			// When the cursor enters a feature in the point layer, prepare for dragging.
			map.on('mouseenter', 'point', function () {
				map.setPaintProperty('point', 'circle-color', '#3bb2d0');
				canvas.style.cursor = 'move';
			});

			map.on('mouseleave', 'point', function () {
				map.setPaintProperty('point', 'circle-color', '#3887be');
				canvas.style.cursor = '';
			});

			map.on('mousedown', 'point', function (e) {
				// Prevent the default map drag behavior.
				e.preventDefault();

				canvas.style.cursor = 'grab';

				map.on('mousemove', onMove);
				map.once('mouseup', onUp);
			});

			map.on('touchstart', 'point', function (e) {
				if (e.points.length !== 1) return;

				// Prevent the default map drag behavior.
				e.preventDefault();

				map.on('touchmove', onMove);
				map.once('touchend', onUp);
			});
		});
	}
</script>

<div class="form-field card">
	<div class="card-header"><h5 class="card-title">Location</h5></div>
	<button type="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML(nameof(Resources.Location.GeoLocation)))">
		<i class="fas fa-question-circle"></i>
	</button>
	<div id="map" style="height: 20em; width: 100%;"></div>
	<div class="form-group sr-only">
		<label asp-for="Location.Latitude" class="control-label"></label>
		<input id="Model.Location_lat" asp-for="Location.Latitude" class="form-control"></input>
		<span asp-validation-for="Location.Latitude" class="text-danger"></span>
	</div>
	<div class="form-group sr-only">
		<label asp-for="Location.Longitude" class="control-label"></label>
		<input id="Model.Location_lng" asp-for="Location.Longitude" class="form-control"></input>
		<span asp-validation-for="Location.Longitude" class="text-danger"></span>
	</div>
</div>

				<div class="form-field form-group">
					<button type ="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"StartDate"))"><i class="fas fa-question-circle"></i></button>
					<label class="control-label">Start Date</label>
					<input  asp-for="StartDate" class="form-control"></input>
					<span asp-validation-for="StartDate" class="text-danger"></span>
				</div>
				<div class="form-field form-group">
					<button type ="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"EndDate"))"><i class="fas fa-question-circle"></i></button>
					<label class="control-label">End Date</label>
					<input  asp-for="EndDate" class="form-control"></input>
					<span asp-validation-for="EndDate" class="text-danger"></span>
				</div>
<div class="card">
	<div class="card-header">
		<h5 class="card-title">Facilities</h5>
	</div>
	<div class="card-body">
		<button type="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML(nameof(Dodo.LocationResources.SiteFacilities)))">
			<i class="fas fa-question-circle"></i>
		</button>
		<div class="row">
			<div class="col-sm">
				<div class="form-field form-group">
					<button type="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"{nameof(Dodo.LocationResources.SiteFacilities)}_{nameof(Dodo.LocationResources.SiteFacilities.Toilets)}"))">
						<i class="fas fa-question-circle"></i>
					</button>
					<label class="control-label">Toilets</label>
					<select asp-items="@Html.GetEnumSelectList<Dodo.LocationResources.EAccessType>()" asp-for="Facilities.Toilets" class="form-control"></select>
					<span asp-validation-for="Facilities.Toilets" class="text-danger"></span>
				</div>
				<div class="form-field form-group">
					<button type="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"{nameof(Dodo.LocationResources.SiteFacilities)}_{nameof(Dodo.LocationResources.SiteFacilities.Bathrooms)}"))">
						<i class="fas fa-question-circle"></i>
					</button>
					<label class="control-label">Bathrooms</label>
					<select asp-items="@Html.GetEnumSelectList<Dodo.LocationResources.EAccessType>()" asp-for="Facilities.Bathrooms" class="form-control"></select>
					<span asp-validation-for="Facilities.Bathrooms" class="text-danger"></span>
				</div>
				<div class="form-field form-group">
					<button type="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"{nameof(Dodo.LocationResources.SiteFacilities)}_{nameof(Dodo.LocationResources.SiteFacilities.Food)}"))">
						<i class="fas fa-question-circle"></i>
					</button>
					<label class="control-label">Food</label>
					<select asp-items="@Html.GetEnumSelectList<Dodo.LocationResources.EAccessType>()" asp-for="Facilities.Food" class="form-control"></select>
					<span asp-validation-for="Facilities.Food" class="text-danger"></span>
				</div>
				<div class="form-field form-group">
					<button type="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"{nameof(Dodo.LocationResources.SiteFacilities)}_{nameof(Dodo.LocationResources.SiteFacilities.OutdoorCamping)}"))">
						<i class="fas fa-question-circle"></i>
					</button>
					<label class="control-label">Outdoor Camping</label>
					<select asp-items="@Html.GetEnumSelectList<Dodo.LocationResources.EAccessType>()" asp-for="Facilities.OutdoorCamping" class="form-control"></select>
					<span asp-validation-for="Facilities.OutdoorCamping" class="text-danger"></span>
				</div>
			</div>
			<div class="col-sm">
				<div class="form-field form-group">
					<button type="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"{nameof(Dodo.LocationResources.SiteFacilities)}_{nameof(Dodo.LocationResources.SiteFacilities.IndoorCamping)}"))">
						<i class="fas fa-question-circle"></i>
					</button>
					<label class="control-label">Indoor Camping</label>
					<select asp-items="@Html.GetEnumSelectList<Dodo.LocationResources.EAccessType>()" asp-for="Facilities.IndoorCamping" class="form-control"></select>
					<span asp-validation-for="Facilities.IndoorCamping" class="text-danger"></span>
				</div>
				<div class="form-field form-group">
					<button type="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"{nameof(Dodo.LocationResources.SiteFacilities)}_{nameof(Dodo.LocationResources.SiteFacilities.Accomodation)}"))">
						<i class="fas fa-question-circle"></i>
					</button>
					<label class="control-label">Accomodation</label>
					<select asp-items="@Html.GetEnumSelectList<Dodo.LocationResources.EAccessType>()" asp-for="Facilities.Accomodation" class="form-control"></select>
					<span asp-validation-for="Facilities.Accomodation" class="text-danger"></span>
				</div>
				<div class="form-field form-group">
					<button type="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"{nameof(Dodo.LocationResources.SiteFacilities)}_{nameof(Dodo.LocationResources.SiteFacilities.Internet)}"))">
						<i class="fas fa-question-circle"></i>
					</button>
					<label class="control-label">Internet</label>
					<select asp-items="@Html.GetEnumSelectList<Dodo.LocationResources.EAccessType>()" asp-for="Facilities.Internet" class="form-control"></select>
					<span asp-validation-for="Facilities.Internet" class="text-danger"></span>
				</div>
				<div class="form-field form-group">
					<button type="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"{nameof(Dodo.LocationResources.SiteFacilities)}_{nameof(Dodo.LocationResources.SiteFacilities.Electricity)}"))">
						<i class="fas fa-question-circle"></i>
					</button>
					<label class="control-label">Electricity</label>
					<select asp-items="@Html.GetEnumSelectList<Dodo.LocationResources.EAccessType>()" asp-for="Facilities.Electricity" class="form-control"></select>
					<span asp-validation-for="Facilities.Electricity" class="text-danger"></span>
				</div>
			</div>
		</div>
		<div class="row">
			<div class="col-sm">
				<div class="form-field form-check">
					<button type="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"{nameof(Dodo.LocationResources.SiteFacilities)}_{nameof(Dodo.LocationResources.SiteFacilities.Kitchen)}"))">
						<i class="fas fa-question-circle"></i>
					</button>
					<input type="checkbox" asp-for="Facilities.Kitchen" class="form-check-input"></input>
					<label class="form-check-label">Kitchen</label>
					<span asp-validation-for="Facilities.Kitchen" class="text-danger"></span>
				</div>
				<div class="form-field form-check">
					<button type="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"{nameof(Dodo.LocationResources.SiteFacilities)}_{nameof(Dodo.LocationResources.SiteFacilities.DisabilityFriendly)}"))">
						<i class="fas fa-question-circle"></i>
					</button>
					<input type="checkbox" asp-for="Facilities.DisabilityFriendly" class="form-check-input"></input>
					<label class="form-check-label">Disability Friendly</label>
					<span asp-validation-for="Facilities.DisabilityFriendly" class="text-danger"></span>
				</div>
				<div class="form-field form-check">
					<button type="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"{nameof(Dodo.LocationResources.SiteFacilities)}_{nameof(Dodo.LocationResources.SiteFacilities.Inductions)}"))">
						<i class="fas fa-question-circle"></i>
					</button>
					<input type="checkbox" asp-for="Facilities.Inductions" class="form-check-input"></input>
					<label class="form-check-label">Inductions</label>
					<span asp-validation-for="Facilities.Inductions" class="text-danger"></span>
				</div>
				<div class="form-field form-check">
					<button type="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"{nameof(Dodo.LocationResources.SiteFacilities)}_{nameof(Dodo.LocationResources.SiteFacilities.TalksAndTraining)}"))">
						<i class="fas fa-question-circle"></i>
					</button>
					<input type="checkbox" asp-for="Facilities.TalksAndTraining" class="form-check-input"></input>
					<label class="form-check-label">Talks And Training</label>
					<span asp-validation-for="Facilities.TalksAndTraining" class="text-danger"></span>
				</div>
			</div>
			<div class="col-sm">
				<div class="form-field form-check">
					<button type="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"{nameof(Dodo.LocationResources.SiteFacilities)}_{nameof(Dodo.LocationResources.SiteFacilities.Welfare)}"))">
						<i class="fas fa-question-circle"></i>
					</button>
					<input type="checkbox" asp-for="Facilities.Welfare" class="form-check-input"></input>
					<label class="form-check-label">Welfare</label>
					<span asp-validation-for="Facilities.Welfare" class="text-danger"></span>
				</div>
				<div class="form-field form-check">
					<button type="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"{nameof(Dodo.LocationResources.SiteFacilities)}_{nameof(Dodo.LocationResources.SiteFacilities.AffinityGroupFormation)}"))">
						<i class="fas fa-question-circle"></i>
					</button>
					<input type="checkbox" asp-for="Facilities.AffinityGroupFormation" class="form-check-input"></input>
					<label class="form-check-label">Affinity Group Formation</label>
					<span asp-validation-for="Facilities.AffinityGroupFormation" class="text-danger"></span>
				</div>
				<div class="form-field form-check">
					<button type="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"{nameof(Dodo.LocationResources.SiteFacilities)}_{nameof(Dodo.LocationResources.SiteFacilities.VolunteersNeeded)}"))">
						<i class="fas fa-question-circle"></i>
					</button>
					<input type="checkbox" asp-for="Facilities.VolunteersNeeded" class="form-check-input"></input>
					<label class="form-check-label">Volunteers Needed</label>
					<span asp-validation-for="Facilities.VolunteersNeeded" class="text-danger"></span>
				</div>
				<div class="form-field form-check">
					<button type="button" class="help-button" data-toggle="tooltip" data-html="true" title="@(Dodo.HelpUtility.GetHelpHTML($"{nameof(Dodo.LocationResources.SiteFacilities)}_{nameof(Dodo.LocationResources.SiteFacilities.FamilyFriendly)}"))">
						<i class="fas fa-question-circle"></i>
					</button>
					<input type="checkbox" asp-for="Facilities.FamilyFriendly" class="form-check-input"></input>
					<label class="form-check-label">Family Friendly</label>
					<span asp-validation-for="Facilities.FamilyFriendly" class="text-danger"></span>
				</div>

			</div>
		</div>
	</div>
</div>


					<div class="form-field form-group">
						<input type="submit" value="Save" class="btn btn-primary btn-block" />
					</div>
				</form>
			</div>
		</div>
	</div>
	@{ if (typeof(Dodo.Users.Tokens.INotificationResource).IsAssignableFrom(Model.__Type))
		{
			<div class="tab-pane fade" id="notifications" role="tabpanel" aria-labelledby="notifications-tab">
				<div class="card">
	<h5 class="card-header">Post an Announcement</h5>
	<div class="card-body">
		<form id="newannouncement" method="post" action="notifications/@Model.Slug/new">
			<div class="form-group">
				<textarea id="Message" name="Message" class="form-control description-entry"></textarea>
			</div>
			<small id="helpBlock" class="form-text text-muted" style="text-align:left;">
				Announcements are messages that will be displayed on the public page and be visible for all users. You can use them to give short updates or messages.<br />
				To insert hyperlinks, use the following format: [My link text](www.example.com). This will display as: <a href="www.example.com">My link text</a>
			</small>
			<input type="submit" value="Post" class="btn btn-primary btn-block form-field" />
		</form>
	</div>
</div>

<div class="card">
	<h5 class="card-header">Current Notifications</h5>
	<div class="card-body">
		<ul class="list-group">
			@{foreach (var notification in notifications)
				{
					<li class="list-group-item">
						<div class="card-header notification-header">
							<div class="row">
								<div class="col notification-nudge1">
									<div class="row">
										<small>
											@TimeZoneInfo.ConvertTimeFromUtc(notification.Timestamp.ToUniversalTime(), Timezone ?? TimeZoneInfo.Utc).ToString("HH:mm d/M/y")
										</small>
									</div>
									<div class="row">
										<strong>
											@notification.Type.ToUpperInvariant()
										</strong>
									</div>
								</div>
								<div class="col-auto">
									@{ if (!string.IsNullOrEmpty(notification.Source))
										{
											<button type="button" class="btn btn-outline-primary" data-toggle="tooltip" data-placement="bottom" title="Source: @notification.Source">
												<span class="fas fa-comment"></span>
											</button>
										} }
									@{ if (!string.IsNullOrEmpty(notification.Link))
										{
											<button type="button" class="btn btn-outline-primary" data-toggle="tooltip" data-placement="bottom" title="URL: @notification.Link">
												<span class="fas fa-link"></span>
											</button>
										} }
									<button type="button" class="btn btn-outline-primary" data-toggle="tooltip" data-placement="bottom" title="The visibility of this announcement is @Common.NameAttributeExtensions.GetName(notification.PermissionLevel)">
										<span class="fas fa-eye"></span>
									</button>
									@if (notification.CanDelete)
									{
										<a class="btn btn-outline-danger" href="notifications/@Model.Slug/delete?notification=@notification.Guid">
											<p class="fas fa-trash"></p>
										</a>
									}

								</div>
							</div>
						</div>
						<div class="notification-text">
							<p> @Html.Raw(notification.Message) </p>
						</div>
					</li>
				}}
		</ul>
	</div>
</div>

			</div>
		} }
	@{if (typeof(Dodo.IAdministratedResource).IsAssignableFrom(Model.__Type))
		{
			<div class="tab-pane fade" id="admin" role="tabpanel" aria-labelledby="admin-tab">
				
			</div>
		} }
	@{ if (typeof(Dodo.Roles.Role).IsAssignableFrom(Model.__Type) && permissions != null && permissions.CanManageRoles)
		{
			<div class="tab-pane fade" id="role" role="tabpanel" aria-labelledby="role-tab">
				{ROLES}
			</div>
		}}
	<div class="tab-pane fade" id="analytics" role="tabpanel" aria-labelledby="analytics-tab">
		@{
	Dodo.Analytics.AnalyticInfo viewData = Dodo.Analytics.Analytics.GetInfo(Model.Guid);
}

<div class="card">
	<h5 class="card-header">Statistics</h5>
	<div class="card-body">
		<div class="col">
			@{
				if (typeof(Dodo.IGroupResource).IsAssignableFrom(Model.__Type))
				{
					// Draw member count
					<div class="form-group row">
						<label class="col-md col-form-label">Members</label>
						<div class="col-sm-10">
							<input type="text" readonly class="form-control-plaintext" id="staticEmail" value="@((Model as dynamic).MemberCount)">
						</div>
					</div>
				}
			}
			<div class="form-group row">
				<label class="col-md col-form-label">Total Views</label>
				<div class="col-sm-10">
					<input type="text" readonly class="form-control-plaintext" id="staticEmail" value="@viewData?.Pool.Sum(p => p.Value.UnauthenticatedViewCount)">
				</div>
			</div>
			<div class="form-group row">
				<label class="col-md col-form-label">Signed-in Views</label>
				<div class="col-sm-10">
					<input type="text" readonly class="form-control-plaintext" id="staticEmail" value="@viewData?.Pool.Sum(p => p.Value.AuthenticatedViewCount)">
				</div>
			</div>
		</div>
	</div>
</div>

	</div>
</div>
