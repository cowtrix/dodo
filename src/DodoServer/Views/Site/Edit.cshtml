@model Dodo.ViewModels.SiteViewModel;

@{
	// This is generated code from the DodoAOT project. DO NOT MODIFY.\r\n
	ViewData["Title"] = "Edit Site";
	Dodo.AccessContext context = (Dodo.AccessContext)ViewData["Context"];
	Resources.EPermissionLevel permissionLevel = (Resources.EPermissionLevel)ViewData["Permission"];
	System.TimeZoneInfo Timezone = (System.TimeZoneInfo)ViewData["Timezone"];
}



<ul class="nav nav-tabs" id="myTab" role="tablist">
	<li class="nav-item">
		<a class="nav-link active" id="info-tab" data-toggle="tab" href="#info" role="tab" aria-controls="info" aria-selected="true">Edit Details</a>
	</li>
	<li class="nav-item">
		<a class="nav-link" id="notifications-tab" data-toggle="tab" href="#notifications" role="tab" aria-controls="notifications" aria-selected="false">Notifications</a>
	</li>
	<li class="nav-item">
		<a class="nav-link" id="admin-tab" data-toggle="tab" href="#admin" role="tab" aria-controls="admin" aria-selected="false">Adminstration</a>
	</li>
	<li><a class="nav-link active" href="@Dodo.DodoApp.NetConfig.FullURI/Site/@Model.Slug">View</a></li>
</ul>
<div class="tab-content" id="myTabContent">
	<div class="tab-pane fade show active" id="info" role="tabpanel" aria-labelledby="info-tab">
		<div class="row">
			<div class="card" style="width:100%;">
				<div class="card-body">
					<form asp-action="Edit">
						<div asp-validation-summary="ModelOnly" class="text-danger"></div>
										<div class="form-group">
					<label asp-for="Guid" class="control-label"></label>
					<input  readonly asp-for="Guid" class="form-control"></input>
					<span asp-validation-for="Guid" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="Name" class="control-label"></label>
					<input  asp-for="Name" class="form-control"></input>
					<span asp-validation-for="Name" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="Slug" class="control-label"></label>
					<input  asp-for="Slug" class="form-control"></input>
					<span asp-validation-for="Slug" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="Revision" class="control-label"></label>
					<input  readonly asp-for="Revision" class="form-control"></input>
					<span asp-validation-for="Revision" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="ArrestRisk" class="control-label"></label>
					<input  asp-for="ArrestRisk" class="form-control"></input>
					<span asp-validation-for="ArrestRisk" class="text-danger"></span>
				</div>
				<div class="card">
					<div class="card-body">
						<h5 class="card-title">Facilities</h5>
							<div class="form-group">
								<label asp-for="Facilities.Toilets" class="control-label"></label>
								<input  asp-for="Facilities.Toilets" class="form-control"></input>
								<span asp-validation-for="Facilities.Toilets" class="text-danger"></span>
							</div>
							<div class="form-group">
								<label asp-for="Facilities.Bathrooms" class="control-label"></label>
								<input  asp-for="Facilities.Bathrooms" class="form-control"></input>
								<span asp-validation-for="Facilities.Bathrooms" class="text-danger"></span>
							</div>
							<div class="form-group">
								<label asp-for="Facilities.Food" class="control-label"></label>
								<input  asp-for="Facilities.Food" class="form-control"></input>
								<span asp-validation-for="Facilities.Food" class="text-danger"></span>
							</div>
							<div class="form-group">
								<label asp-for="Facilities.Kitchen" class="control-label"></label>
								<input  asp-for="Facilities.Kitchen" class="form-control"></input>
								<span asp-validation-for="Facilities.Kitchen" class="text-danger"></span>
							</div>
							<div class="form-group">
								<label asp-for="Facilities.DisabilityFriendly" class="control-label"></label>
								<input  asp-for="Facilities.DisabilityFriendly" class="form-control"></input>
								<span asp-validation-for="Facilities.DisabilityFriendly" class="text-danger"></span>
							</div>
							<div class="form-group">
								<label asp-for="Facilities.OutdoorCamping" class="control-label"></label>
								<input  asp-for="Facilities.OutdoorCamping" class="form-control"></input>
								<span asp-validation-for="Facilities.OutdoorCamping" class="text-danger"></span>
							</div>
							<div class="form-group">
								<label asp-for="Facilities.IndoorCamping" class="control-label"></label>
								<input  asp-for="Facilities.IndoorCamping" class="form-control"></input>
								<span asp-validation-for="Facilities.IndoorCamping" class="text-danger"></span>
							</div>
							<div class="form-group">
								<label asp-for="Facilities.Accomodation" class="control-label"></label>
								<input  asp-for="Facilities.Accomodation" class="form-control"></input>
								<span asp-validation-for="Facilities.Accomodation" class="text-danger"></span>
							</div>
							<div class="form-group">
								<label asp-for="Facilities.Inductions" class="control-label"></label>
								<input  asp-for="Facilities.Inductions" class="form-control"></input>
								<span asp-validation-for="Facilities.Inductions" class="text-danger"></span>
							</div>
							<div class="form-group">
								<label asp-for="Facilities.TalksAndTraining" class="control-label"></label>
								<input  asp-for="Facilities.TalksAndTraining" class="form-control"></input>
								<span asp-validation-for="Facilities.TalksAndTraining" class="text-danger"></span>
							</div>
							<div class="form-group">
								<label asp-for="Facilities.Welfare" class="control-label"></label>
								<input  asp-for="Facilities.Welfare" class="form-control"></input>
								<span asp-validation-for="Facilities.Welfare" class="text-danger"></span>
							</div>
							<div class="form-group">
								<label asp-for="Facilities.AffinityGroupFormation" class="control-label"></label>
								<input  asp-for="Facilities.AffinityGroupFormation" class="form-control"></input>
								<span asp-validation-for="Facilities.AffinityGroupFormation" class="text-danger"></span>
							</div>
							<div class="form-group">
								<label asp-for="Facilities.VolunteersNeeded" class="control-label"></label>
								<input  asp-for="Facilities.VolunteersNeeded" class="form-control"></input>
								<span asp-validation-for="Facilities.VolunteersNeeded" class="text-danger"></span>
							</div>
							<div class="form-group">
								<label asp-for="Facilities.FamilyFriendly" class="control-label"></label>
								<input  asp-for="Facilities.FamilyFriendly" class="form-control"></input>
								<span asp-validation-for="Facilities.FamilyFriendly" class="text-danger"></span>
							</div>
							<div class="form-group">
								<label asp-for="Facilities.Internet" class="control-label"></label>
								<input  asp-for="Facilities.Internet" class="form-control"></input>
								<span asp-validation-for="Facilities.Internet" class="text-danger"></span>
							</div>
							<div class="form-group">
								<label asp-for="Facilities.Electricity" class="control-label"></label>
								<input  asp-for="Facilities.Electricity" class="form-control"></input>
								<span asp-validation-for="Facilities.Electricity" class="text-danger"></span>
							</div>
						</div>
				</div>
<script>
	mapboxgl.accessToken = "@Common.Config.ConfigManager.GetValue("MapBoxGeocodingService_ApiKey", "")"
	var coordinates = document.getElementById('coordinates');
	window.onload = function () {
		var map = new mapboxgl.Map({
			container: 'map',
			style: 'mapbox://styles/mapbox/streets-v11',
			center: [@Model.Location.Longitude, @Model.Location.Latitude],
			zoom: 6
		});
		var geocoder = new MapboxGeocoder({
			accessToken: mapboxgl.accessToken,
			mapboxgl: mapboxgl
		});
		geocoder.on('result', function (result) {
			
			var coords = result["result"]["center"];
			console.warn(JSON.stringify(
				coords,
				null,
				2
			));
			document.getElementById("Model.Location_lat").value = coords[1];
			document.getElementById("Model.Location_lng").value = coords[0];
			// Update the Point feature in `geojson` coordinates
			// and call setData to the source layer `point` on it.
		geojson.features[0].geometry.coordinates = [coords[0], coords[1]];
			map.getSource('point').setData(geojson);
		});
		map.addControl(
			geocoder
		);
		var canvas = map.getCanvasContainer();

		var geojson = {
			'type': 'FeatureCollection',
			'features': [
				{
					'type': 'Feature',
					'geometry': {
						'type': 'Point',
						'coordinates': [@Model.Location.Longitude, @Model.Location.Latitude],
					}
				}
			]
		};

		function onMove(e) {
			var coords = e.lngLat;

			// Set a UI indicator for dragging.
			canvas.style.cursor = 'grabbing';

			// Update the Point feature in `geojson` coordinates
			// and call setData to the source layer `point` on it.
			geojson.features[0].geometry.coordinates = [coords.lng, coords.lat];
			map.getSource('point').setData(geojson);
		}

		function onUp(e) {
			var coords = e.lngLat;

			document.getElementById("Model.Location_lat").value = coords.lat;
			document.getElementById("Model.Location_lng").value = coords.lng;

			canvas.style.cursor = '';

			// Unbind mouse/touch events
			map.off('mousemove', onMove);
			map.off('touchmove', onMove);
		}

		map.on('load', function () {
			// Add a single point to the map
			map.addSource('point', {
				'type': 'geojson',
				'data': geojson
			});

			map.addLayer({
				'id': 'point',
				'type': 'circle',
				'source': 'point',
				'paint': {
					'circle-radius': 10,
					'circle-color': '#3887be'
				}
			});

			// When the cursor enters a feature in the point layer, prepare for dragging.
			map.on('mouseenter', 'point', function () {
				map.setPaintProperty('point', 'circle-color', '#3bb2d0');
				canvas.style.cursor = 'move';
			});

			map.on('mouseleave', 'point', function () {
				map.setPaintProperty('point', 'circle-color', '#3887be');
				canvas.style.cursor = '';
			});

			map.on('mousedown', 'point', function (e) {
				// Prevent the default map drag behavior.
				e.preventDefault();

				canvas.style.cursor = 'grab';

				map.on('mousemove', onMove);
				map.once('mouseup', onUp);
			});

			map.on('touchstart', 'point', function (e) {
				if (e.points.length !== 1) return;

				// Prevent the default map drag behavior.
				e.preventDefault();

				map.on('touchmove', onMove);
				map.once('touchend', onUp);
			});
		});
	}
</script>

@{ /**/
	   var data = Model.Location.LocationData; }
<div class="card">
	<div class="card-body">
		<h5 class="card-title">Location</h5>
		<div id="map" style="height: 20em; width: 100%;"></div>
		<div class="form-group">
			<label asp-for="Location.Latitude" class="control-label"></label>
			<input id="Model.Location_lat" asp-for="Location.Latitude" class="form-control"></input>
			<span asp-validation-for="Location.Latitude" class="text-danger"></span>
		</div>
		<div class="form-group">
			<label asp-for="Location.Longitude" class="control-label"></label>
			<input id="Model.Location_lng" asp-for="Location.Longitude" class="form-control"></input>
			<span asp-validation-for="Location.Longitude" class="text-danger"></span>
		</div>
	</div>
</div>

				<div class="form-group">
					<label asp-for="PublicDescription" class="control-label"></label>
					<textarea  asp-for="PublicDescription" class="form-control"></textarea>
					<span asp-validation-for="PublicDescription" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label class="control-label">Parent</label>
					<input class="sr-only" asp-for="Parent.Type"/>
					<a class="btn btn-primary" role="button" href="../../@Model.Parent.Type/@Model.Parent.Slug">@Model.Parent.Name</a>
				</div>
				<div class="form-group">
					<label asp-for="VideoEmbedURL" class="control-label"></label>
					<input  asp-for="VideoEmbedURL" class="form-control"></input>
					<span asp-validation-for="VideoEmbedURL" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="IsPublished" class="control-label"></label>
					<input  asp-for="IsPublished" class="form-control"></input>
					<span asp-validation-for="IsPublished" class="text-danger"></span>
				</div>

						<div class="form-group">
							<input type="submit" value="Save" class="btn btn-primary" />
						</div>
					</form>
				</div>
			</div>
		</div>
		<div class="row">
			<div class="card" style="width:100%;">
				<div class="card-body">
					<form asp-action="Delete">
						<div asp-validation-summary="ModelOnly" class="text-danger"></div>
						<a href="@Dodo.DodoApp.NetConfig.FullURI/edit/Site/@Model.Slug/delete" class="btn btn-danger">Delete</a>
					</form>
				</div>
			</div>
		</div>
	</div>
	<div class="tab-pane fade" id="notifications" role="tabpanel" aria-labelledby="notifications-tab"></div>
	<div class="tab-pane fade" id="admin" role="tabpanel" aria-labelledby="admin-tab">...</div>
</div>

